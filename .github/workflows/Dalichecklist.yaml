name: Drupal

on:
  schedule:
  - cron:  '01 00 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Drupal-AMD64:
    strategy:
      matrix:
        BACK_END: ["nginx", "apache"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image ${{ matrix.BACK_END }} php 8.1 and Drupal
        run: docker-compose -f "docker-compose.yml" up -d --build
        env:
          PHP_VERSION: "8.1"
          BACK_END: ${{ matrix.BACK_END }}
          XDEBUG: true
          DISPLAY_PHPERROR: true
          SERVER_ROOT:  /var/www
          APP_CODE_PATH_HOST: /tmp/drupal
          DB_NAME:  test
          DB_USER:  admin
          DB_PASSWORD:  password
          DATA_PATH_HOST: /tmp/db
      - name: PHP version check
        run:  docker exec drupal_drupal_1 php -v
      - name: Mongodb driver check
        run:  docker exec drupal_drupal_1 php -m | grep mongo
      - name: Mysql Driver check
        run: docker exec drupal_drupal_1 php -m | grep mysqli
      - name: Composer test
        run: docker exec drupal_drupal_1 composer
      - name: Folder check
        run:  docker exec drupal_drupal_1 ls -la /app/
      - name: Root path check
        run: |
          docker exec drupal_drupal_1 ls -la       
      - name: Durpal application test
        run:  |
          sleep 30s
          docker exec drupal_drupal_1 rm -rf /var/www/settings.php
          docker exec drupal_drupal_1 rm -rf /var/www/.htaccess
          docker exec drupal_drupal_1 curl -fLk -o /var/www/.htaccess "https://raw.githubusercontent.com/nabad600/drupal/master/.htaccess"
          curl -i http://localhost:5647/core/install.php
          while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5647/core/install.php)" != "200" ]]; 
            do 
            sleep 10s
          done
      - name: Destroy container and file
        run:  |
          docker-compose down
          echo "y" | docker image prune
          echo "y" | docker system prune -a
          sudo rm -rf /tmp/db
          sudo rm -rf /tmp/drupal
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: github_action_status
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Post Content LEMP ${{ matrix.BACK_END }} AMD64 :rocket:'
          SLACK_TITLE: Post Title
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  Drupal-ARM64:
    strategy:
      matrix:
        BACK_END: ["nginx", "apache"]
    runs-on: ubuntu-22.04
    name: Drupal-ARM64
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu22.04
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
      - name: Get the output
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
      - name: Build the Docker image ${{ matrix.BACK_END }} php 8.1 and Drupal
        run: docker-compose -f "docker-compose.yml" up -d --build
        env:
          PHP_VERSION: "8.1"
          BACK_END: ${{ matrix.BACK_END }}
          XDEBUG: true
          DISPLAY_PHPERROR: true
          SERVER_ROOT:  /var/www
          APP_CODE_PATH_HOST: /tmp/drupal
          DB_NAME:  test
          DB_USER:  admin
          DB_PASSWORD:  password
          DATA_PATH_HOST: /tmp/db
      - name: PHP version check
        run:  docker exec drupal_drupal_1 php -v
      - name: Mongodb driver check
        run:  docker exec drupal_drupal_1 php -m | grep mongo
      - name: Mysql Driver check
        run: docker exec drupal_drupal_1 php -m | grep mysqli
      - name: Composer test
        run: docker exec drupal_drupal_1 composer
      - name: Folder check
        run:  docker exec drupal_drupal_1 ls -la /app/
      - name: Root path check
        run: |
          docker exec drupal_drupal_1 ls -la      
      - name: Durpal application test
        run:  |
          sleep 30s
          docker exec drupal_drupal_1 rm -rf /var/www/settings.php
          docker exec drupal_drupal_1 rm -rf /var/www/.htaccess
          docker exec drupal_drupal_1 curl -fLk -o /var/www/.htaccess "https://raw.githubusercontent.com/nabad600/drupal/master/.htaccess"
          curl -i http://localhost:5647/core/install.php
          while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5647/core/install.php)" != "200" ]]; 
            do 
            sleep 10s
          done
      - name: Destroy container and file
        run:  |
          docker-compose down
          echo "y" | docker image prune
          echo "y" | docker system prune -a
          sudo rm -rf /tmp/db
          sudo rm -rf /tmp/drupal
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: github_action_status
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Post Content LEMP ${{ matrix.BACK_END }} ARM64 :rocket:'
          SLACK_TITLE: Post Title
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
