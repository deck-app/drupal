FROM ghcr.io/deck-app/apache:v8.0
LABEL maintainer Naba Das <hello@get-deck.com>

# Persistent runtime dependencies
# Example RUN apk add --no-cache php8-openssl php8-sysvmsg php8-curl
RUN mkdir -p /app
RUN mkdir -p /var/preview
COPY httpd.conf /etc/apache2/httpd.conf
COPY httpd.conf /app/httpd.conf
RUN wget -O /var/preview/index.html https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
RUN sed -i "s#{SERVER_ROOT}#/var/preview#g" /etc/apache2/httpd.conf
RUN sed -i "s#{SERVER_ROOT}#/var/www#g" /app/httpd.conf

RUN ln -s /usr/bin/php /usr/bin/php8


WORKDIR /var/www
COPY php_ini/php8.0.ini /etc/php8/php.ini

ARG DISPLAY_PHPERROR
RUN if [ ${DISPLAY_PHPERROR} = true ]; then \
sed -i "s#{DISPLAY}#On#g" /etc/php8/php.ini \
;else \
sed -i "s#{DISPLAY}#Off#g" /etc/php8/php.ini \
;fi

#Xdebug enable or disable
ARG XDEBUG
RUN if [ ${XDEBUG} = true ]; then \
apk add php8-pecl-xdebug \
&& echo "zend_extension=xdebug" >> /etc/php8/php.ini \
;fi

#Application Download
RUN curl -fLk -o /app/drupal.tar.gz  "https://www.drupal.org/download-latest/tar.gz"
RUN cd /app/ && tar -xzvf drupal.tar.gz && rm drupal.tar.gz

RUN apk add php8-zip php8-gd php8-pdo php8-pdo_dblib php8-pdo_mysql php8-pdo_odbc php8-pdo_pgsql php8-pdo_sqlite
RUN apk add zip

COPY docker-entrypoint.sh /docker-entrypoint.sh
#DRUPAL_INSTALL enable or disable
ARG DRUPAL_INSTALL
RUN if [ ${DRUPAL_INSTALL} = true ]; then \
sed -i "s#{DRUPAL_INSTALL}#true#g" /docker-entrypoint.sh \
;else \
sed -i "s#{DRUPAL_INSTALL}#false#g" /docker-entrypoint.sh \
;fi
RUN chmod +x /docker-entrypoint.sh
CMD /docker-entrypoint.sh & /sbin/runit-wrapper