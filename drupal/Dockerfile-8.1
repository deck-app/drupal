ARG BACK_END
FROM ghcr.io/deck-app/${BACK_END}:v8.1
LABEL maintainer Naba Das <hello@get-deck.com>

# Persistent runtime dependencies
# Example RUN apk add --no-cache php81-openssl php81-sysvmsg php81-curl
RUN apk add --no-cache tar git php81-gd php81-pdo php81-pdo_dblib php81-pdo_mysql php81-pdo_odbc php81-pdo_pgsql php81-pdo_sqlite

RUN mkdir -p /app
RUN mkdir -p /var/preview
COPY default.conf /app/default.conf
COPY httpd.conf /app/httpd.conf
RUN wget -O /var/preview/index.html https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html

ARG SERVER_ROOT
ARG BACK_END
RUN if [ ${BACK_END} = nginx ]; then \
    cp /app/default.conf /etc/nginx/conf.d/default.conf && \
    sed -i "s#{SERVER_ROOT}#/var/preview#g" /etc/nginx/conf.d/default.conf && \
    sed -i "s#{SERVER_ROOT}#/var/www/#g" /app/default.conf \
;else \
    cp /app/httpd.conf /etc/apache2/httpd.conf && \
    sed -i "s#{SERVER_ROOT}#/var/preview#g" /etc/apache2/httpd.conf && \
    sed -i "s#{SERVER_ROOT}#/var/www/#g" /app/httpd.conf \
;fi
RUN apk add --no-cache zip

WORKDIR /var/www
#PHP display error enable or disable
COPY php.ini /etc/php81/php.ini
ARG DISPLAY_PHPERROR
RUN if [ ${DISPLAY_PHPERROR} = true ]; then \
sed -i "s#{DISPLAY}#On#g" /etc/php81/php.ini \
;else \
sed -i "s#{DISPLAY}#Off#g" /etc/php81/php.ini \
;fi

#Xdebug enable or disable
ARG XDEBUG
RUN if [ ${XDEBUG} = true ]; then \
apk add php81-pecl-xdebug \
&& echo "zend_extension=xdebug" >> /etc/php81/php.ini \
;fi

COPY docker-entrypoint.sh /docker-entrypoint.sh

#Application Download
RUN curl -fLk -o /app/drupal.tar.gz  "https://www.drupal.org/download-latest/tar.gz"
RUN cd /app/ && tar -xzvf drupal.tar.gz && rm drupal.tar.gz 
COPY settings.php /app/settings.php
ARG DB_PASSWORD
ARG DB_NAME
ARG DB_USER
RUN sed -i "s#{DB_NAME}#${DB_NAME}#g" /app/settings.php
RUN sed -i "s#{DB_USER}#${DB_USER}#g" /app/settings.php
RUN sed -i "s#{DB_PASSWORD}#${DB_PASSWORD}#g" /app/settings.php
RUN sed -i "s#{BACK_END}#${BACK_END}#g" /docker-entrypoint.sh

RUN chmod +x /docker-entrypoint.sh
CMD /docker-entrypoint.sh & /sbin/runit-wrapper